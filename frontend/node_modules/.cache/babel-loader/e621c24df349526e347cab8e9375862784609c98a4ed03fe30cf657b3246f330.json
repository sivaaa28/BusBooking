{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva Prakash\\\\Desktop\\\\reactsqlotp\\\\frontend\\\\bus-ticket-booking\\\\src\\\\components\\\\SeatSelection.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import './SeatSelection.css'; // Import the CSS file\n\n// const SeatSelection = () => {\n//   const [selectedSeats, setSelectedSeats] = useState([]);\n\n//   const toggleSeatSelection = seatNumber => {\n//     setSelectedSeats(prevSelectedSeats => {\n//       if (prevSelectedSeats.includes(seatNumber)) {\n//         // If seat is already selected, remove it\n//         return prevSelectedSeats.filter(seat => seat !== seatNumber);\n//       } else {\n//         // If seat is not selected, add it\n//         return [...prevSelectedSeats, seatNumber];\n//       }\n//     });\n//   };\n\n//   // Dummy seats data\n//   const seats = Array.from({ length: 40 }, (_, i) => i + 1);\n\n//   const selectedSeatsText = selectedSeats.length === 0 ? 'Selected Seat' : `Selected Seats (${selectedSeats.length})`;\n\n//   const confirmButtonText = selectedSeats.length === 0 ? 'Proceed Payment' : `Proceed payment for ${selectedSeats.length} ${selectedSeats.length > 1 ? 'seats' : 'seat'}`;\n\n//   return (\n//     <div className=\"seat-selection\">\n//       <h1>Select Seats </h1>\n//       <div className=\"seats\">\n//         {seats.map(seat => (\n//           <button\n//             key={seat}\n//             className={`seat ${selectedSeats.includes(seat) ? 'selected' : ''}`}\n//             onClick={() => toggleSeatSelection(seat)}\n//           >\n//             {seat}\n//           </button>\n//         ))}\n//       </div>\n//       {selectedSeats.length > 0 && (\n//         <div>\n//           <p>{selectedSeatsText}: {selectedSeats.join(', ')}</p>\n//         </div>\n//       )}\n//       <Link to=\"/confirmation\">\n//         <button className=\"confirm-button\" disabled={selectedSeats.length === 0}>{confirmButtonText}</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default SeatSelection;\n\n// src/components/SeatSelection.js\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './SeatSelection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeatSelection = () => {\n  _s();\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const navigate = useNavigate();\n  const {\n    busId\n  } = useParams();\n  const toggleSeatSelection = seatNumber => {\n    setSelectedSeats(prevSelectedSeats => {\n      if (prevSelectedSeats.includes(seatNumber)) {\n        return prevSelectedSeats.filter(seat => seat !== seatNumber);\n      } else {\n        return [...prevSelectedSeats, seatNumber];\n      }\n    });\n  };\n  const seats = Array.from({\n    length: 40\n  }, (_, i) => i + 1);\n  const selectedSeatsText = selectedSeats.length === 0 ? 'Selected Seat' : `Selected Seats (${selectedSeats.length})`;\n  const confirmButtonText = selectedSeats.length === 0 ? 'Proceed Payment' : `Proceed payment for ${selectedSeats.length} ${selectedSeats.length > 1 ? 'seats' : 'seat'}`;\n  const handleProceed = () => {\n    if (selectedSeats.length > 0) {\n      navigate('/payment', {\n        state: {\n          selectedSeats\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seat-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Select Seats for Bus \", busId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seats\",\n      children: seats.map(seat => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `seat ${selectedSeats.includes(seat) ? 'selected' : ''}`,\n        onClick: () => toggleSeatSelection(seat),\n        children: seat\n      }, seat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), selectedSeats.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [selectedSeatsText, \": \", selectedSeats.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm-button\",\n      onClick: handleProceed,\n      disabled: selectedSeats.length === 0,\n      children: confirmButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(SeatSelection, \"DKa2k5XEKW3FXwztUE2pNwa9ICc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = SeatSelection;\nexport default SeatSelection;\nvar _c;\n$RefreshReg$(_c, \"SeatSelection\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","jsxDEV","_jsxDEV","SeatSelection","_s","selectedSeats","setSelectedSeats","navigate","busId","toggleSeatSelection","seatNumber","prevSelectedSeats","includes","filter","seat","seats","Array","from","length","_","i","selectedSeatsText","confirmButtonText","handleProceed","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","join","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Siva Prakash/Desktop/reactsqlotp/frontend/bus-ticket-booking/src/components/SeatSelection.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import './SeatSelection.css'; // Import the CSS file\r\n\r\n// const SeatSelection = () => {\r\n//   const [selectedSeats, setSelectedSeats] = useState([]);\r\n\r\n//   const toggleSeatSelection = seatNumber => {\r\n//     setSelectedSeats(prevSelectedSeats => {\r\n//       if (prevSelectedSeats.includes(seatNumber)) {\r\n//         // If seat is already selected, remove it\r\n//         return prevSelectedSeats.filter(seat => seat !== seatNumber);\r\n//       } else {\r\n//         // If seat is not selected, add it\r\n//         return [...prevSelectedSeats, seatNumber];\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   // Dummy seats data\r\n//   const seats = Array.from({ length: 40 }, (_, i) => i + 1);\r\n\r\n//   const selectedSeatsText = selectedSeats.length === 0 ? 'Selected Seat' : `Selected Seats (${selectedSeats.length})`;\r\n\r\n//   const confirmButtonText = selectedSeats.length === 0 ? 'Proceed Payment' : `Proceed payment for ${selectedSeats.length} ${selectedSeats.length > 1 ? 'seats' : 'seat'}`;\r\n\r\n//   return (\r\n//     <div className=\"seat-selection\">\r\n//       <h1>Select Seats </h1>\r\n//       <div className=\"seats\">\r\n//         {seats.map(seat => (\r\n//           <button\r\n//             key={seat}\r\n//             className={`seat ${selectedSeats.includes(seat) ? 'selected' : ''}`}\r\n//             onClick={() => toggleSeatSelection(seat)}\r\n//           >\r\n//             {seat}\r\n//           </button>\r\n//         ))}\r\n//       </div>\r\n//       {selectedSeats.length > 0 && (\r\n//         <div>\r\n//           <p>{selectedSeatsText}: {selectedSeats.join(', ')}</p>\r\n//         </div>\r\n//       )}\r\n//       <Link to=\"/confirmation\">\r\n//         <button className=\"confirm-button\" disabled={selectedSeats.length === 0}>{confirmButtonText}</button>\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SeatSelection;\r\n\r\n// src/components/SeatSelection.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './SeatSelection.css';\r\n\r\nconst SeatSelection = () => {\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const navigate = useNavigate();\r\n  const { busId } = useParams();\r\n\r\n  const toggleSeatSelection = seatNumber => {\r\n    setSelectedSeats(prevSelectedSeats => {\r\n      if (prevSelectedSeats.includes(seatNumber)) {\r\n        return prevSelectedSeats.filter(seat => seat !== seatNumber);\r\n      } else {\r\n        return [...prevSelectedSeats, seatNumber];\r\n      }\r\n    });\r\n  };\r\n\r\n  const seats = Array.from({ length: 40 }, (_, i) => i + 1);\r\n\r\n  const selectedSeatsText = selectedSeats.length === 0 ? 'Selected Seat' : `Selected Seats (${selectedSeats.length})`;\r\n\r\n  const confirmButtonText = selectedSeats.length === 0 ? 'Proceed Payment' : `Proceed payment for ${selectedSeats.length} ${selectedSeats.length > 1 ? 'seats' : 'seat'}`;\r\n\r\n  const handleProceed = () => {\r\n    if (selectedSeats.length > 0) {\r\n      navigate('/payment', { state: { selectedSeats } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"seat-selection\">\r\n      <h1>Select Seats for Bus {busId}</h1>\r\n      <div className=\"seats\">\r\n        {seats.map(seat => (\r\n          <button\r\n            key={seat}\r\n            className={`seat ${selectedSeats.includes(seat) ? 'selected' : ''}`}\r\n            onClick={() => toggleSeatSelection(seat)}\r\n          >\r\n            {seat}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedSeats.length > 0 && (\r\n        <div>\r\n          <p>{selectedSeatsText}: {selectedSeats.join(', ')}</p>\r\n        </div>\r\n      )}\r\n      <button className=\"confirm-button\" onClick={handleProceed} disabled={selectedSeats.length === 0}>{confirmButtonText}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatSelection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}