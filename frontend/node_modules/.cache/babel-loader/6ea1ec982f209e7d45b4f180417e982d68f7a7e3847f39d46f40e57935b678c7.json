{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siva Prakash\\\\Desktop\\\\reactsqlotp\\\\frontend\\\\bus-ticket-booking\\\\src\\\\components\\\\BookingConfirmation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport sendSMS from '../utils/sendSMS';\nimport { UserContext } from '../contexts/UserContext'; // Import the UserContext\nimport './BookingConfirmation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingConfirmation = () => {\n  _s();\n  const location = useLocation();\n  const selectedSeats = useMemo(() => {\n    var _location$state;\n    return ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedSeats) || [];\n  }, [location.state]);\n  const totalAmount = useMemo(() => {\n    var _location$state2;\n    return ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.totalAmount) || 0;\n  }, [location.state]);\n  const {\n    userEmail\n  } = useContext(UserContext); // Use the context to get the user email\n\n  useEffect(() => {\n    if (userEmail) {\n      const messageContent = `Your seats ${selectedSeats.join(', ')} have been booked. Total Amount: Rs.${totalAmount}`;\n      sendSMS(userEmail, messageContent).then(response => {\n        console.log('SMS sent successfully', response.data);\n      }).catch(error => {\n        console.error('Failed to send SMS', error);\n      });\n    }\n  }, [userEmail, selectedSeats, totalAmount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-confirmation\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Yay!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Seats are booked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enjoy your upcoming journey!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The ticket details have been sent to your phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingConfirmation, \"t5E/KcnbmQRgRgCcP3Ww5vsT8lU=\", false, function () {\n  return [useLocation];\n});\n_c = BookingConfirmation;\nexport default BookingConfirmation;\nvar _c;\n$RefreshReg$(_c, \"BookingConfirmation\");","map":{"version":3,"names":["React","useEffect","useMemo","useContext","useLocation","sendSMS","UserContext","jsxDEV","_jsxDEV","BookingConfirmation","_s","location","selectedSeats","_location$state","state","totalAmount","_location$state2","userEmail","messageContent","join","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Siva Prakash/Desktop/reactsqlotp/frontend/bus-ticket-booking/src/components/BookingConfirmation.js"],"sourcesContent":["import React, { useEffect, useMemo, useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport sendSMS from '../utils/sendSMS';\r\nimport { UserContext } from '../contexts/UserContext'; // Import the UserContext\r\nimport './BookingConfirmation.css';\r\n\r\nconst BookingConfirmation = () => {\r\n  const location = useLocation();\r\n\r\n  const selectedSeats = useMemo(() => location.state?.selectedSeats || [], [location.state]);\r\n  const totalAmount = useMemo(() => location.state?.totalAmount || 0, [location.state]);\r\n  const { userEmail } = useContext(UserContext); // Use the context to get the user email\r\n\r\n  useEffect(() => {\r\n    if (userEmail) {\r\n      const messageContent = `Your seats ${selectedSeats.join(', ')} have been booked. Total Amount: Rs.${totalAmount}`;\r\n\r\n      sendSMS(\r\n        userEmail,\r\n        messageContent\r\n      )\r\n        .then((response) => {\r\n          console.log('SMS sent successfully', response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Failed to send SMS', error);\r\n        });\r\n    }\r\n  }, [userEmail, selectedSeats, totalAmount]);\r\n\r\n  return (\r\n    <div className=\"booking-confirmation\">\r\n      <div className=\"message-box\">\r\n        <h1>Yay!</h1>\r\n        <p>Your Seats are booked</p>\r\n        <p>Enjoy your upcoming journey!</p>\r\n        <p>The ticket details have been sent to your phone</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingConfirmation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,WAAW,QAAQ,yBAAyB,CAAC,CAAC;AACvD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAGV,OAAO,CAAC;IAAA,IAAAW,eAAA;IAAA,OAAM,EAAAA,eAAA,GAAAF,QAAQ,CAACG,KAAK,cAAAD,eAAA,uBAAdA,eAAA,CAAgBD,aAAa,KAAI,EAAE;EAAA,GAAE,CAACD,QAAQ,CAACG,KAAK,CAAC,CAAC;EAC1F,MAAMC,WAAW,GAAGb,OAAO,CAAC;IAAA,IAAAc,gBAAA;IAAA,OAAM,EAAAA,gBAAA,GAAAL,QAAQ,CAACG,KAAK,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBD,WAAW,KAAI,CAAC;EAAA,GAAE,CAACJ,QAAQ,CAACG,KAAK,CAAC,CAAC;EACrF,MAAM;IAAEG;EAAU,CAAC,GAAGd,UAAU,CAACG,WAAW,CAAC,CAAC,CAAC;;EAE/CL,SAAS,CAAC,MAAM;IACd,IAAIgB,SAAS,EAAE;MACb,MAAMC,cAAc,GAAG,cAAcN,aAAa,CAACO,IAAI,CAAC,IAAI,CAAC,uCAAuCJ,WAAW,EAAE;MAEjHV,OAAO,CACLY,SAAS,EACTC,cACF,CAAC,CACEE,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACrD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACT,SAAS,EAAEL,aAAa,EAAEG,WAAW,CAAC,CAAC;EAE3C,oBACEP,OAAA;IAAKmB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCpB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BpB,OAAA;QAAAoB,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbxB,OAAA;QAAAoB,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5BxB,OAAA;QAAAoB,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnCxB,OAAA;QAAAoB,QAAA,EAAG;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCID,mBAAmB;EAAA,QACNL,WAAW;AAAA;AAAA6B,EAAA,GADxBxB,mBAAmB;AAoCzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}